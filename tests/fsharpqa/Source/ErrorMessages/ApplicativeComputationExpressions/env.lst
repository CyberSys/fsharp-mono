	SOURCE=E_ApplyNotDefinedOnBuilder.fs                SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_ApplyNotDefinedOnBuilder.fs: CE builder missing Apply
	SOURCE=E_ApplyUsingNotDefinedOnBuilder.fs           SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_ApplyUsingNotDefinedOnBuilder.fs: CE builder missing ApplyUsing
	SOURCE=E_DoBangInLetBangAndBangBlock.fs             SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_DoBangInLetBangAndBangBlock.fs: do! in a let! ... and! ... block
	SOURCE=E_LetBetweenLetBangAndAndBang.fs             SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_LetBetweenLetBangAndAndBang.fs: let between let! and and!
	SOURCE=E_YieldInsteadOfReturn.fs                    SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_YieldInsteadOfReturn.fs: yield instead of return
	SOURCE=E_ReturnBangInsteadOfReturn.fs               SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_ReturnBangInsteadOfReturn.fs: return! instead of return
	SOURCE=E_NoReturn.fs                                SCFLAGS="-r:builderlib.dll -g --optimize-" COMPILE_ONLY=1 PRECMD="\$FSC_PIPE --target:library builderlib.fs" # E_NoReturn.fs: No return after let! ... and! ...
